"""–ü—Ä–æ—Å—Ç–µ–π—à–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Å–Ω–æ–≤–∞–Ω–∞ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–ª–æ–≤.
–ö–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ –≤ –ø—Ä–æ–≤–µ—Ä—è–µ–º–æ–º —Ç–µ–∫—Å—Ç–µ –∏—â–µ—Ç—Å—è –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ –∏, –µ—Å–ª–∏ —Ç–∞–∫–æ–µ —Å–ª–æ–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –æ–Ω–æ –ø–æ–º–µ—á–∞–µ—Ç—Å—è, –∫–∞–∫ –æ—à–∏–±–æ—á–Ω–æ–µ.
–ù–∞–ø–∏—à–µ–º –ø–æ–¥–æ–±–Ω—É—é —Å–∏—Å—Ç–µ–º—É.
–ß–µ—Ä–µ–∑ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –≤–≤–æ–¥ –ø–æ–¥–∞—ë—Ç—Å—è —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–æ–π ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ùëë
 –∑–∞–ø–∏—Å–µ–π –≤ —Å–ø–∏—Å–∫–µ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–ª–æ–≤, –ø–æ—Å–ª–µ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è  d —Å—Ç—Ä–æ–∫ —Å –æ–¥–Ω–∏–º —Å–ª–æ–≤–∞—Ä–Ω—ã–º —Å–ª–æ–≤–æ–º –Ω–∞ —Å—Ç—Ä–æ–∫—É, –∑–∞—Ç–µ–º ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ùëô
 —Å—Ç—Ä–æ–∫ —Ç–µ–∫—Å—Ç–∞, –ø–æ—Å–ª–µ —á–µ–≥–æ ‚Äî ùëô  —Å—Ç—Ä–æ–∫ —Ç–µ–∫—Å—Ç–∞.

–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç —Å–ª–æ–≤–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ —Å–ª–æ–≤–∞—Ä–µ. –†–µ–≥–∏—Å—Ç—Ä —Å–ª–æ–≤ –Ω–µ —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è. –ü–æ—Ä—è–¥–æ–∫ –≤—ã–≤–æ–¥–∞ —Å–ª–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π. –°–ª–æ–≤–∞, –Ω–µ –≤—Å—Ç—Ä–µ—á–∞—é—â–∏–µ—Å—è –≤ —Å–ª–æ–≤–∞—Ä–µ, –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è –≤ –≤—ã–≤–æ–¥–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã.
"""
num_d = int(input())
lst_words = []
lst_str = []
new_list = []
def iter(number_iter,lst):
    while number_iter != 0:
        words = input().lower()
        lst.append(words)
        number_iter -= 1
        continue
    return lst
iter(num_d, lst_words)
num_str = int(input())
for i in range(num_str):
    words = input().split(' ')
    for word in words:
        lst_str.append(word)

d = {key: value for key, value in zip(lst_words, range(1,num_d+1))}
for i in lst_str:
    if i.lower() not in d and i not in new_list:
        print (i)
        new_list.append(i)